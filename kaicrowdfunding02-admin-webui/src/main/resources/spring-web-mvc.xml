<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd   http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 自动扫描handler-->
    <context:component-scan base-package="com.kai.crowd.mvc"/>

    <!-- 配置SpringMVC的注解驱动-->
    <mvc:annotation-driven/>

    <!-- 配置视图解析器-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 配置基于XML的异常映射-->
    <bean id="simpleMappingExceptionResolver"
          class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <!-- 配置异常类型和具体视图页面的对应关系-->
        <property name="exceptionMappings">
            <props>
                <!-- key属性指定异常全类名-->
                <!-- 标签体制写对应的视图（这个值拼前后缀得到具体路径-->
                <prop key="java.lang.Exception">system-error</prop>
            </props>
        </property>
    </bean>

    <!-- 配置view-controller,直接把请求地址和视图名称关联起来，不比写handler方法了-->
    <!--
        @RequestMapping("/admin/to/login/page.html")
        public String toLoginPage(){
            return "admin-login";
        }
    -->
    <mvc:view-controller path="/admin/to/login/page.html" view-name="admin-login"/>
    <mvc:view-controller path="/admin/to/main/page.html" view-name="admin-main"/>
    <mvc:view-controller path="/admin/to/add/page.html" view-name="admin-add"/>
    <mvc:view-controller path="/role/to/page.html" view-name="role-page"/>
    <mvc:view-controller path="/menu/to/page.html" view-name="menu-page"/>
    <!-- 注册拦截器 使用springSecurity后当前自定义的登录拦截器就不用了了-->
   <!--
    <mvc:interceptors>
        <mvc:interceptor>
             mvc:mapping配置要拦截的资源
             /*对应一层路径，比如:/aaa
             /** 对应多层路径，比如：/aaa/bbb 或/aaa/bbb/ccc/ddd
            <mvc:mapping path="/**"/>
             mvc:exclued-mapping配置不拦截的资源
            <mvc:exclude-mapping path="/admin/to/login/page.html"/>
            <mvc:exclude-mapping path="/admin/do/login.html"/>
            <mvc:exclude-mapping path="/admin/do/logout.html"/>

             配置拦截器的类
            <bean class="com.kai.crowd.mvc.interceptor.LoginInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>
    -->
</beans>